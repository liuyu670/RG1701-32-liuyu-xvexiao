<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mecol.bookshop_ssm.dao.TeacherDao">

    <select id="getTeacherList" resultMap="teacherResultMap">
        select * from teacher order by id
    </select>

    <resultMap id="teacherResultMap" type="com.mecol.bookshop_ssm.entity.Teacher">
        <id property="id" column="id"/>
        <result property="username" column="username"/>
        <result property="sex" column="sex"/>
        <result property="birthday" column="birthday"/>
        <result property="grade" column="grade"/>
        <result property="rank" column="rank"/>
        <result property="jobDate" column="jobDate"/>
        <result property="college" column="college"/>
        <result property="phone" column="phone"/>
        <!--一对多映射 collection fetchType lazy 懒加载
          下面select属性说明将会以id（teacher的id）为参数执行
           CourseDao.selectCourseByTeacherId
        -->
        <collection property="courseList" javaType="ArrayList"
                    column="id" ofType="com.mecol.bookshop_ssm.entity.Course"
                    select="com.mecol.bookshop_ssm.dao.CourseDao.selectCourseByTeacherId"
                    fetchType="eager"><!--这里如果是lazy 懒加载会造成json异常-->
            <id property="id" column="id"/>
            <!--只查询了课程名称-->
            <result property="courseName" column="courseName"/>

        </collection>
    </resultMap>


    <select id="getTeacherById" resultType="com.mecol.bookshop_ssm.entity.Teacher">
        select * from teacher where id=#{id}
    </select>

    <delete id="delTeacherById">
        delete from teacher where id=#{id}
    </delete>
    <update id="updTeacher" parameterType="com.mecol.bookshop_ssm.entity.Teacher">
        update teacher
        <set>
            <if test="username!=null">
                username=#{username},
            </if>
            <if test="sex!=null">
                sex=#{sex},
            </if>
            <if test="birthday!=null">
                birthday=#{birthday},
            </if>
            <if test="grade!=null">
                grade=#{grade},
            </if>
            <if test="rank!=null">
                rank=#{rank},
            </if>
            <if test="jobDate!=null">
                jobDate=#{jobDate},
            </if>
            <if test="college!=null">
                college=#{college},
            </if>
            <if test="phone!=null">
                phone=#{phone},
            </if>
            <if test="roleId != null">
                roleId = #{roleId},
            </if>
            <if test="password != null">
                password = #{password},
            </if>
        </set>
        where id=#{id}

    </update>
    <insert id="insTeacher" parameterType="com.mecol.bookshop_ssm.entity.Teacher">
        insert into teacher (username,sex,birthday,grade,rank,jobDate,college,password,phone,roleId)
        values (#{username},#{sex},#{birthday},#{grade},#{rank},#{jobDate},#{college},#{password},#{phone},#{roleId})
    </insert>

    <select id="login" resultType="com.mecol.bookshop_ssm.entity.Teacher">
        select * from teacher
        <where>
            <if test="username!=null">
                and username=#{username}
            </if>
            <if test="password!=null">
                and password=#{password}
            </if>
        </where>

    </select>


    <select id="getTeacherByUsername" resultType="com.mecol.bookshop_ssm.entity.Teacher">
        select * from teacher where username=#{username}
    </select>
</mapper>
